<?xml version="1.0"?>
<launch>
<!-- General Parameters -->
  <arg name="tf_prefix" default=""/>
<!-- UR5e Parameters -->
  <arg name="robot_ip" default="192.168.50.82" doc="IP address by which the robot can be reached."/>
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch"/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur5e_controllers.yaml" 
  doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" 
  doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller"
   doc="Controllers that are initally loaded, but not started."/>    
  <arg name="kinematics_config" default="$(find ur_description)/config/ur5e/default_kinematics.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <arg name="use_tool_communication" default="false" 
  doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="headless_mode" default="false" 
  doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
<!-- MiR Parameters -->
  <arg name="mir_hostname" default="192.168.50.201" />
  <arg name="disable_map" default="false" doc="Disable the map topic and map -> odom TF transform from the MiR" />
<!-- rviz Parameters -->
  <arg name="rviz" default="false" />



<!-- Robot Description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find henrybot_description)/urdf/henry.urdf.xacro'" />

  <!-- Robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/tf"        to="tf_rss" />
    <remap from="/tf_static" to="tf_static_rss" />
  </node>

  <node name="robot_joint_publisher" pkg="robot_joint_publisher" type="robot_joint_publisher" />


  <!-- remove those TFs that are also published by the MiR to avoid conflicts -->
  <!-- <node name="tf_remove_state_publisher_frames" pkg="mir_driver" type="tf_remove_child_frames.py" output="screen">
    <remap from="tf_in"         to="tf_rss" />
    <remap from="tf_out"        to="/tf" />
    <remap from="tf_static_in"  to="tf_static_rss" />
    <remap from="tf_static_out" to="/tf_static" />
    <rosparam param="remove_frames">
      - base_link
      - front_laser_link
      - back_laser_link
      - imu_link
    </rosparam>
  </node> -->

  <!-- MiR base -->
  <group if="$(arg disable_map)">
    <node name="mir_bridge" pkg="mir_driver" type="mir_bridge.py" output="screen">
      <param name="hostname" value="$(arg mir_hostname)" />
      <param name="tf_prefix" value="mir" />
      <remap from="map" to="map_mir" />
      <remap from="map_metadata" to="map_metadata_mir" />
      <remap from="rosout" to="/rosout" />
      <remap from="rosout_agg" to="/rosout_agg" />
      <remap from="tf" to="tf_mir" />
    </node>

    <!-- remove the map -> odom TF transform -->
    <node name="tf_remove_mir_map_frame" pkg="mir_driver" type="tf_remove_child_frames.py" output="screen">
      <remap from="tf_in"         to="tf_mir" />
      <remap from="tf_out"        to="/tf" />
      <rosparam param="remove_frames">
        - odom
      </rosparam>
    </node>
  </group>
  <group unless="$(arg disable_map)">
    <node name="mir_bridge" pkg="mir_driver" type="mir_bridge.py" output="screen">
      <param name="hostname" value="$(arg mir_hostname)" />
      <param name="tf_prefix" value="mir" />
      <remap from="map" to="/map" />
      <remap from="map_metadata" to="/map_metadata" />
      <remap from="rosout" to="/rosout" />
      <remap from="rosout_agg" to="/rosout_agg" />
      <remap from="tf" to="/tf" />
    </node>
  </group>

  <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="b_scan" />
    <remap from="scan_filtered" to="b_scan_rep117" />
  </node>

  <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="f_scan" />
    <remap from="scan_filtered" to="f_scan_rep117" />
  </node>

  <node name="fake_mir_joint_publisher" pkg="mir_driver" type="fake_mir_joint_publisher.py" output="screen" />

    <!-- UR5e BringUp -->
  <!-- No idea about this things here -->
  <!-- Convert joint states to /tf tranforms -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> -->

  <include file="$(find ur_robot_driver)/launch/ur_control.launch">
    <arg name="tf_prefix" value=""/>
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="debug" value="$(arg debug)"/>
    
    <arg name="reverse_ip" value=""/>
    <arg name="reverse_port" value="50001"/>
    <arg name="script_sender_port" value="50002"/>
    <arg name="trajectory_port" value="50003"/>
    
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>

    <arg name="kinematics_config" value="$(arg kinematics_config)"/>

    <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
    <arg name="tool_voltage" value="24"/>
    <arg name="tool_parity" value="0"/>
    <arg name="tool_baud_rate" value="115200"/>
    <arg name="tool_stop_bits" value="1"/>
    <arg name="tool_rx_idle_chars" value="1.5"/>
    <arg name="tool_tx_idle_chars" value="3.5"/>
    <arg name="tool_device_name" value="/tmp/ttyUR"/>
    <arg name="tool_tcp_port" value="30002"/>

    <arg name="headless_mode" value="$(arg headless_mode)"/>
  </include>



  

<!-- Rviz BringUp -->

  <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find henrybot_description)/rviz/henry.rviz" required="true" />
 
</launch>



  

